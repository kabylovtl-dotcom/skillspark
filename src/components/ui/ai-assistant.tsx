import { useState, useRef, useEffect } from 'react';
import { Button } from './button';
import { Card, CardContent, CardHeader, CardTitle } from './card';
import { Input } from './input';
import { Badge } from './badge';
import { 
  Bot, 
  Send, 
  X, 
  MessageCircle, 
  Lightbulb, 
  Zap, 
  Atom, 
  ChevronLeft,
  ChevronRight,
  Sparkles,
  Brain,
  BookOpen,
  Cpu,
  Waves
} from 'lucide-react';
import { useLanguage } from '@/contexts/LanguageContext';
import { 
  callChatGPT, 
  systemPrompt, 
  ChatMessage 
} from '@/api/chatgpt';

interface Message {
  id: string;
  type: 'user' | 'ai';
  content: string;
  timestamp: Date;
  isTyping?: boolean;
  displayContent?: string;
}

const AIAssistant = () => {
  const { t } = useLanguage();
  const [isOpen, setIsOpen] = useState(false);
  const [isCollapsed, setIsCollapsed] = useState(false);
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputValue, setInputValue] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [selectedMode, setSelectedMode] = useState<'chat' | 'physics' | 'example' | 'formula'>('chat');
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const typingIntervalRef = useRef<NodeJS.Timeout | null>(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–∞–Ω–µ–ª–∏
  useEffect(() => {
    if (isOpen && messages.length === 0) {
      const welcomeMessage: Message = {
        id: '1',
        type: 'ai',
        content: getWelcomeMessage(),
        timestamp: new Date(),
        displayContent: getWelcomeMessage(),
        isTyping: false
      };
      setMessages([welcomeMessage]);
    }
  }, [isOpen, selectedMode]);

  const getWelcomeMessage = (): string => {
    switch (selectedMode) {
      case 'physics':
        return `üî¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ–∂–∏–º —Ä–µ—à–µ–Ω–∏—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á!

–Ø –ø–æ–º–æ–≥—É –≤–∞–º:
‚Ä¢ –†–µ—à–∏—Ç—å –∑–∞–¥–∞—á–∏ –ø–æ—à–∞–≥–æ–≤–æ
‚Ä¢ –û–±—ä—è—Å–Ω–∏—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –∑–∞–∫–æ–Ω—ã
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è
‚Ä¢ –î–∞—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã

–ó–∞–¥–∞–π—Ç–µ –ª—é–±—É—é —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É! üí°`;
      case 'example':
        return `üìö –†–µ–∂–∏–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤!

–Ø —Å–æ–∑–¥–∞–º –¥–ª—è –≤–∞—Å:
‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã —Å —á–∏—Å–ª–∞–º–∏
‚Ä¢ –ü–æ—à–∞–≥–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è
‚Ä¢ –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∏
‚Ä¢ –°–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–µ–º—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è

–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É, –∏ —è —Å–æ–∑–¥–∞–º —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä! ‚ú®`;
      case 'formula':
        return `üßÆ –†–µ–∂–∏–º –æ–±—ä—è—Å–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—É–ª!

–Ø —Ä–∞—Å—Å–∫–∞–∂—É –æ:
‚Ä¢ –ó–Ω–∞—á–µ–Ω–∏–∏ –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
‚Ä¢ –ï–¥–∏–Ω–∏—Ü–∞—Ö –∏–∑–º–µ—Ä–µ–Ω–∏—è
‚Ä¢ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º—É–ª
‚Ä¢ –°–≤—è–∑–∏ —Å –¥—Ä—É–≥–∏–º–∏ —Ñ–æ—Ä–º—É–ª–∞–º–∏
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ

–í–≤–µ–¥–∏—Ç–µ —Ñ–æ—Ä–º—É–ª—É –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è! üìê`;
      case 'chat':
      default:
        return t('ai.welcome');
    }
  };

  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—á–∞—Ç–∏ –¥–ª—è –ò–ò —Å–æ–æ–±—â–µ–Ω–∏–π
  useEffect(() => {
    messages.forEach((message, index) => {
      if (message.type === 'ai' && message.isTyping && message.displayContent === '') {
        console.log('Starting typing animation for message:', index);
        const fullContent = message.content;
        let currentIndex = 0;
        
        const typeText = () => {
          if (currentIndex < fullContent.length) {
            setMessages(prev => prev.map((msg, i) => 
              i === index 
                ? { ...msg, displayContent: fullContent.slice(0, currentIndex + 1) }
                : msg
            ));
            currentIndex++;
            setTimeout(typeText, 20);
          } else {
            console.log('Finished typing message:', index);
            setMessages(prev => prev.map((msg, i) => 
              i === index 
                ? { ...msg, isTyping: false }
                : msg
            ));
          }
        };
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—á–∞—Ç—å —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
        setTimeout(typeText, 100);
      }
    });
  }, [messages]);

  const quickPrompts = [
    t('ai.prompts.newton'),
    t('ai.prompts.gravity'),
    t('ai.prompts.electricity'),
    t('ai.prompts.quantum'),
    t('ai.prompts.energy'),
    t('ai.prompts.magnetism')
  ];

  const handleSendMessage = async () => {
    if (!inputValue.trim() || isLoading) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      type: 'user',
      content: inputValue,
      timestamp: new Date(),
      displayContent: inputValue
    };

    setMessages(prev => [...prev, userMessage]);
    setInputValue('');
    setIsLoading(true);

    try {
      // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
      const aiResponse = await getAIResponse(inputValue);
      const aiMessage: Message = {
        id: (Date.now() + 1).toString(),
        type: 'ai',
        content: aiResponse,
        timestamp: new Date(),
        displayContent: '',
        isTyping: true
      };
      setMessages(prev => [...prev, aiMessage]);
    } catch (error) {
      console.error('Error getting AI response:', error);
      // Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø—Ä–∏ –æ—à–∏–±–∫–µ
      const fallbackResponse = generateFallbackResponse(inputValue);
      const aiMessage: Message = {
        id: (Date.now() + 1).toString(),
        type: 'ai',
        content: fallbackResponse,
        timestamp: new Date(),
        displayContent: '',
        isTyping: true
      };
      setMessages(prev => [...prev, aiMessage]);
    } finally {
      setIsLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç ChatGPT API
  const getChatGPTResponse = async (question: string): Promise<string> => {
    const currentLanguage = t('ai.title');
    
    try {
      // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è ChatGPT
      const messages: ChatMessage[] = [
        { role: 'system', content: systemPrompt(currentLanguage) },
        { role: 'user', content: question }
      ];

      // –í—ã–∑—ã–≤–∞–µ–º ChatGPT API
      const response = await callChatGPT(messages);
      return response;
    } catch (error) {
      console.error('Error calling ChatGPT:', error);
      throw error;
    }
  };

  // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤
  const getAIResponse = async (question: string): Promise<string> => {
    const currentLanguage = t('ai.title');
    
    try {
      // For all modes, use ChatGPT with enhanced prompts
      let enhancedPrompt = question;
      
      switch (selectedMode) {
        case 'physics':
          enhancedPrompt = `Physics question: ${question}. Please provide a detailed physics explanation with formulas and examples.`;
          break;
        case 'example':
          enhancedPrompt = `Interactive example request: ${question}. Please provide practical, hands-on examples that demonstrate this concept.`;
          break;
        case 'formula':
          enhancedPrompt = `Formula explanation request: ${question}. Please explain the formulas involved, their derivation, and how to apply them.`;
          break;
        case 'chat':
        default:
          enhancedPrompt = question;
          break;
      }

      return await getChatGPTResponse(enhancedPrompt);
    } catch (error) {
      console.error('Error getting AI response:', error);
      throw error;
    }
  };

  // Fallback —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∏ –æ—à–∏–±–∫–µ API
  const generateFallbackResponse = (question: string): string => {
    const lowerQuestion = question.toLowerCase();
    const currentLanguage = t('ai.title');
    
    // –ö—ã—Ä–≥—ã–∑—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã
    if (currentLanguage === '–ò–ò –ñ–∞—Ä–¥–∞–º—á—ã') {
      if (lowerQuestion.includes('–Ω—å—é—Ç–æ–Ω') || lowerQuestion.includes('–∑–∞–∫–æ–Ω') || lowerQuestion.includes('newton') || lowerQuestion.includes('–º—ã–π–∑–∞–º')) {
        return `üî¨ –ù—å—é—Ç–æ–Ω–¥—É–Ω –±–∏—Ä–∏–Ω—á–∏ –º—ã–π–∑–∞–º—ã (–ò–Ω–µ—Ä—Ü–∏—è –º—ã–π–∑–∞–º—ã):
        
–û–±—ä–µ–∫—Ç —Ç—ã–Ω—á –∞–±–∞–ª–¥–∞ –∫–∞–ª–∞—Ç –∂–µ —Ç—É—Ä—É–∫ —ã–ª–¥–∞–º–¥—ã–∫ –º–µ–Ω–µ–Ω –∫—ã–π–º—ã–ª–¥–∞–π—Ç, —ç–≥–µ—Ä –∞–≥–∞ —Å—ã—Ä—Ç–∫—ã –∫“Ø—á—Ç”©—Ä —Ç–∞–∞—Å–∏—Ä —ç—Ç–ø–µ—Å–µ.

–ñ”©–Ω”©–∫”©–π –º–∏—Å–∞–ª: 
- –ö–∏—Ç–µ–ø —Å—Ç–æ–ª–¥–æ –∂–∞—Ç–∞—Ç –∂–∞–Ω–∞ —Å–∏–∑ –∞–Ω—ã —Ç“Ø—Ä—Ç–∫”©–Ω–≥”© —á–µ–π–∏–Ω –∫—ã–π–º—ã–ª–¥–∞–±–∞–π—Ç
- –ê–≤—Ç–æ–º–æ–±–∏–ª—å —Å–∏–∑ –≥–∞–∑–¥—ã –±–æ—à–æ—Ç–∫–æ–Ω–¥–æ –∏–Ω–µ—Ä—Ü–∏—è –º–µ–Ω–µ–Ω –∞–π–¥–∞–ª–∞ –±–µ—Ä–µ—Ç

–§–æ—Ä–º—É–ª–∞: F = 0 ‚Üí v = const

–ë—É–ª –¥–µ–≥–µ–Ω–¥–∏ –±–∏–ª–¥–∏—Ä–µ—Ç: —ç–≥–µ—Ä –±–∞—Ä–¥—ã–∫ –∫“Ø—á—Ç”©—Ä–¥“Ø–Ω —Å—É–º–º–∞—Å—ã –Ω”©–ª–≥”© –±–∞—Ä–∞–±–∞—Ä –±–æ–ª—Å–æ, –∞–Ω–¥–∞ –æ–±—ä–µ–∫—Ç—Ç–∏–Ω —ã–ª–¥–∞–º–¥—ã–≥—ã —Ç—É—Ä—É–∫! üöó`;
      }
      
      if (lowerQuestion.includes('–≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—è') || lowerQuestion.includes('—Ç—è–∂–µ—Å—Ç—å') || lowerQuestion.includes('gravity') || lowerQuestion.includes('–∞—É—É—Ä–ª—É–∫')) {
        return `üåç –ê—É—É—Ä–ª—É–∫ - –±—É–ª –æ–±—ä–µ–∫—Ç—Ç–µ—Ä–¥–∏–Ω –æ—Ä—Ç–æ—Å—É–Ω–¥–∞–≥—ã —Ç–∞—Ä—Ç—ã–ª—É—É –∫“Ø—á“Ø

–ù–µ–≥–∏–∑–≥–∏ –ø—Ä–∏–Ω—Ü–∏–ø—Ç–µ—Ä:
- –û–±—ä–µ–∫—Ç—Ç–∏–Ω –º–∞—Å—Å–∞—Å—ã –∫–∞–Ω—á–∞–ª—ã–∫ —á–æ“£ –±–æ–ª—Å–æ, –∞–Ω—ã–Ω –∞—É—É—Ä–ª—É–≥—É –æ—à–æ–Ω—á–æ–ª—É–∫ –∫“Ø—á—Ç“Ø“Ø
- –û–±—ä–µ–∫—Ç—Ç–µ—Ä –±–∏—Ä–∏-–±–∏—Ä–∏–Ω–µ–Ω –∫–∞–Ω—á–∞–ª—ã–∫ –∞–ª—ã—Å –±–æ–ª—Å–æ, –∞—É—É—Ä–ª—É–∫ –æ—à–æ–Ω—á–æ–ª—É–∫ –Ω–∞—á–∞—Ä

–ù—å—é—Ç–æ–Ω–¥—É–Ω –¥“Ø–π–Ω”©–ª“Ø–∫ —Ç–∞—Ä—Ç—ã–ª—É—É –º—ã–π–∑–∞–º—ã:
F = G √ó (m‚ÇÅ √ó m‚ÇÇ) / r¬≤

–ú—ã–Ω–¥–∞:
- F - –∞—É—É—Ä–ª—É–∫ –∫“Ø—á“Ø
- G - –∞—É—É—Ä–ª—É–∫ —Ç—É—Ä–∞–∫—Ç—É—É—Å—É
- m‚ÇÅ, m‚ÇÇ - –æ–±—ä–µ–∫—Ç—Ç–µ—Ä–¥–∏–Ω –º–∞—Å—Å–∞–ª–∞—Ä—ã
- r - –æ–±—ä–µ–∫—Ç—Ç–µ—Ä–¥–∏–Ω –±–æ—Ä–±–æ—Ä–ª–æ—Ä—É–Ω—É–Ω –æ—Ä—Ç–æ—Å—É–Ω–¥–∞–≥—ã –∞—Ä–∞–ª—ã–∫

–ú–∏—Å–∞–ª: –ñ–µ—Ä —Å–∏–∑–¥–∏ —Ç–∞—Ä—Ç–∞—Ç, –∞–Ω—Ç–∫–µ–Ω–∏ –∞–Ω—ã–Ω –º–∞—Å—Å–∞—Å—ã ”©—Ç”© —á–æ“£! üåé`;
      }
      
      if (lowerQuestion.includes('—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ') || lowerQuestion.includes('—Ç–æ–∫') || lowerQuestion.includes('electricity') || lowerQuestion.includes('—ç–ª–µ–∫—Ç—Ä')) {
        return `‚ö° –≠–ª–µ–∫—Ç—Ä - –±—É–ª —ç–ª–µ–∫—Ç—Ä –∑–∞—Ä—è–¥–¥–∞—Ä—ã–Ω—ã–Ω –∫—ã–π–º—ã–ª—ã

–ù–µ–≥–∏–∑–≥–∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏—è–ª–∞—Ä:
- –≠–ª–µ–∫—Ç—Ä–æ–Ω–¥–æ—Ä - —Ç–µ—Ä—Å –∑–∞—Ä—è–¥–¥–∞–ª–≥–∞–Ω –±”©–ª“Ø–∫—Ç”©—Ä
- –ü—Ä–æ—Ç–æ–Ω–¥–æ—Ä - –æ“£ –∑–∞—Ä—è–¥–¥–∞–ª–≥–∞–Ω –±”©–ª“Ø–∫—Ç”©—Ä
- –¢–æ–∫ - —ç–ª–µ–∫—Ç—Ä–æ–Ω–¥–æ—Ä–¥—É–Ω ”©—Ç–∫”©—Ä–≥“Ø—á –∞—Ä–∫—ã–ª—É—É –∞–≥—ã–º—ã

–û–º –º—ã–π–∑–∞–º—ã:
U = I √ó R

–ú—ã–Ω–¥–∞:
- U - —á—ã“£–∞–ª—É—É (–í–æ–ª—å—Ç)
- I - —Ç–æ–∫ (–ê–º–ø–µ—Ä) 
- R - –∫–∞—Ä—à—ã–ª—ã–∫ (–û–º)

–ñ”©–Ω”©–∫”©–π –æ–∫—à–æ—à—Ç—É–∫: 
–°—É—É —Ç“Ø—Ç“Ø–≥“Ø–Ω —ç–ª–µ—Å—Ç–µ—Ç–∏“£–∏–∑:
- –ß—ã“£–∞–ª—É—É = —Å—É—É–Ω—É–Ω –±–∞—Å—ã–º—ã
- –¢–æ–∫ = —Å—É—É–Ω—É–Ω –∫”©–ª”©–º“Ø
- –ö–∞—Ä—à—ã–ª—ã–∫ = —Ç“Ø—Ç“Ø–∫—Ç“Ø–Ω –∫–∞–ª—ã“£–¥—ã–≥—ã

–≠–ª–µ–∫—Ç—Ä + –¥–∞–Ω - –≥–∞ —Å—É—É —Ç”©–º”©–Ω –∞–≥—ã–≥–∞–Ω–¥–∞–π –∞–≥–∞—Ç! üíß`;
      }
      
      if (lowerQuestion.includes('–∫–≤–∞–Ω—Ç–æ–≤–∞—è') || lowerQuestion.includes('–∫–≤–∞–Ω—Ç') || lowerQuestion.includes('quantum') || lowerQuestion.includes('–∫–≤–∞–Ω—Ç—Ç—ã–∫')) {
        return `üî¨ –ö–≤–∞–Ω—Ç—Ç—ã–∫ —Ñ–∏–∑–∏–∫–∞ - ”©—Ç”© –∫–∏—á–∏–Ω–µ –æ–±—ä–µ–∫—Ç—Ç–µ—Ä–¥–∏–Ω —Ñ–∏–∑–∏–∫–∞—Å—ã

–ù–µ–≥–∏–∑–≥–∏ –ø—Ä–∏–Ω—Ü–∏–ø—Ç–µ—Ä:
- –ö–≤–∞–Ω—Ç—Ç–∞—à—Ç—ã—Ä—É—É - —ç–Ω–µ—Ä–≥–∏—è –≥–∞–Ω–∞ –±–µ–ª–≥–∏–ª“Ø“Ø –º–∞–∞–Ω–∏–ª–µ—Ä–¥–∏ –∞–ª–∞ –∞–ª–∞—Ç
- –¢–æ–ª–∫—É–Ω —Ñ—É–Ω–∫—Ü–∏—è—Å—ã - –±”©–ª“Ø–∫—Ç”©—Ä —Ç–æ–ª–∫—É–Ω —Å—ã—è–∫—Ç—É—É –∞—Ä–∞–∫–µ—Ç –∫—ã–ª–∞—Ç
- –ë–µ–ª–≥–∏—Å–∏–∑–¥–∏–∫ –ø—Ä–∏–Ω—Ü–∏–±–∏ - –æ—Ä—É–Ω –∂–∞–Ω–∞ —ã–ª–¥–∞–º–¥—ã–∫—Ç—ã —Ç–∞–∫ ”©–ª—á”©–π –∞–ª–±–∞–π—Å—ã–∑

–ö–≤–∞–Ω—Ç—Ç–∞—à—Ç—ã—Ä—É—É–Ω—É–Ω –º–∏—Å–∞–ª–¥–∞—Ä—ã:
- –ê—Ç–æ–º–¥–æ–≥—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–¥–æ—Ä –≥–∞–Ω–∞ –±–µ–ª–≥–∏–ª“Ø“Ø –æ—Ä–±–∏—Ç–∞–ª–∞—Ä–¥–∞ –±–æ–ª–æ –∞–ª–∞—Ç
- –ñ–∞—Ä—ã–∫ –±–µ–ª–≥–∏–ª“Ø“Ø —ç–Ω–µ—Ä–≥–∏—è—Å—ã –±–∞—Ä —Ñ–æ—Ç–æ–Ω-–±”©–ª“Ø–∫—Ç”©—Ä–¥”©–Ω —Ç—É—Ä–∞—Ç

–ñ”©–Ω”©–∫”©–π –æ–∫—à–æ—à—Ç—É–∫:
–ë–∞—Å–∫—ã—á—Ç—ã —ç–ª–µ—Å—Ç–µ—Ç–∏“£–∏–∑ - —Å–∏–∑ –≥–∞–Ω–∞ –±–∞—Å–∫—ã—á—Ç–∞—Ä–¥–∞ —Ç—É—Ä–∞ –∞–ª–∞—Å—ã–∑, –∞–ª–∞—Ä–¥—ã–Ω –æ—Ä—Ç–æ—Å—É–Ω–¥–∞ —ç–º–µ—Å! ü™ú

–ë—É–ª —ç–Ω–µ—Ä–≥–∏—è –±–∏—Ä –º–∞–∞–Ω–∏–¥–µ–Ω —ç–∫–∏–Ω—á–∏—Å–∏–Ω–µ "—Å–µ–∫–∏—Ä–≥–µ–Ω" —Å—ã—è–∫—Ç—É—É!`;
      }
      
      if (lowerQuestion.includes('—ç–Ω–µ—Ä–≥–∏—è') || lowerQuestion.includes('energy') || lowerQuestion.includes('—ç–Ω–µ—Ä–≥–∏—è')) {
        return `‚ö° –≠–Ω–µ—Ä–≥–∏—è - –∂—É–º—É—à –∞—Ç–∫–∞—Ä—É—É –∂”©–Ω–¥”©–º“Ø

–≠–Ω–µ—Ä–≥–∏—è–Ω—ã–Ω –Ω–µ–≥–∏–∑–≥–∏ —Ç“Ø—Ä–ª”©—Ä“Ø:
- –ö–∏–Ω–µ—Ç–∏–∫–∞–ª—ã–∫ - –∫—ã–π–º—ã–ª —ç–Ω–µ—Ä–≥–∏—è—Å—ã
- –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª–¥—ã–∫ - –æ—Ä—É–Ω —ç–Ω–µ—Ä–≥–∏—è—Å—ã
- –ñ—ã–ª—É—É–ª—É–∫ - –º–æ–ª–µ–∫—É–ª–∞–ª–∞—Ä–¥—ã–Ω –∫—ã–π–º—ã–ª —ç–Ω–µ—Ä–≥–∏—è—Å—ã
- –≠–ª–µ–∫—Ç—Ä - —ç–ª–µ–∫—Ç—Ä –∑–∞—Ä—è–¥–¥–∞—Ä—ã–Ω—ã–Ω —ç–Ω–µ—Ä–≥–∏—è—Å—ã

–≠–Ω–µ—Ä–≥–∏—è–Ω—ã–Ω —Å–∞–∫—Ç–∞–ª—É—É –º—ã–π–∑–∞–º—ã:
–≠–Ω–µ—Ä–≥–∏—è –ø–∞–π–¥–∞ –±–æ–ª–±–æ–π—Ç –∂–∞–Ω–∞ –∂–æ–≥–æ–ª–±–æ–π—Ç, –±–∏—Ä–æ–∫ –±–∏—Ä —Ç“Ø—Ä–¥”©–Ω —ç–∫–∏–Ω—á–∏—Å–∏–Ω–µ –∞–π–ª–∞–Ω–∞—Ç!

–ú–∏—Å–∞–ª–¥–∞—Ä:
- –°–∞–ª–∫–∏: –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–¥—ã–∫ ‚Üí –∫–∏–Ω–µ—Ç–∏–∫–∞–ª—ã–∫ ‚Üí –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–¥—ã–∫
- –õ–∞–º–ø–∞: —ç–ª–µ–∫—Ç—Ä ‚Üí –∂–∞—Ä—ã–∫ + –∂—ã–ª—É—É–ª—É–∫
- –ë–∞—Ç–∞—Ä–µ—è: —Ö–∏–º–∏—è–ª—ã–∫ ‚Üí —ç–ª–µ–∫—Ç—Ä

–ö–∏–Ω–µ—Ç–∏–∫–∞–ª—ã–∫ —ç–Ω–µ—Ä–≥–∏—è–Ω—ã–Ω —Ñ–æ—Ä–º—É–ª–∞—Å—ã:
E = ¬Ω √ó m √ó v¬≤

–ú—ã–Ω–¥–∞ m - –º–∞—Å—Å–∞, v - —ã–ª–¥–∞–º–¥—ã–∫! üöÄ`;
      }
      
      if (lowerQuestion.includes('–º–∞–≥–Ω–µ—Ç–∏–∑–º') || lowerQuestion.includes('–º–∞–≥–Ω–∏—Ç') || lowerQuestion.includes('magnetism') || lowerQuestion.includes('–º–∞–≥–Ω–µ—Ç–∏–∑–º')) {
        return `üß≤ –ú–∞–≥–Ω–µ—Ç–∏–∑–º - –º–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä–¥—ã–Ω –±–∞—à–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä–¥—ã —Ç–∞—Ä—Ç—É—É –∂–µ —Ç“Ø—Ä—Ç“Ø“Ø –∫–∞—Å–∏–µ—Ç–∏

–ù–µ–≥–∏–∑–≥–∏ –ø—Ä–∏–Ω—Ü–∏–ø—Ç–µ—Ä:
- –ú–∞–≥–Ω–∏—Ç —É—é–ª–¥–∞—Ä—ã - —Ç“Ø–Ω–¥“Ø–∫ (N) –∂–∞–Ω–∞ —Ç“Ø—à—Ç“Ø–∫ (S)
- –ö–∞—Ä–∞–º–∞-–∫–∞—Ä—à—ã —É—é–ª–¥–∞—Ä —Ç–∞—Ä—Ç–∞—Ç
- –û–∫—à–æ—à —É—é–ª–¥–∞—Ä —Ç“Ø—Ä—Ç”©—Ç

–ú–∞–≥–Ω–∏—Ç —Ç–∞–ª–∞–∞—Å—ã:
- –ú–∞–≥–Ω–∏—Ç—Ç–∏–Ω –∞–π–ª–∞–Ω–∞—Å—ã–Ω–¥–∞–≥—ã –∫”©—Ä“Ø–Ω–±”©–≥”©–Ω –∞–π–º–∞–∫
- –ú–∞–≥–Ω–∏—Ç –∫“Ø—á—Ç”©—Ä“Ø–Ω“Ø–Ω –±–∞–≥—ã—Ç—ã–Ω –∫”©—Ä—Å”©—Ç”©—Ç
- –¢–µ–º–∏—Ä –∫“Ø—Ä”©”©–ª”©—Ä“Ø –º–µ–Ω–µ–Ω –∫”©—Ä—Å”©—Ç“Ø–ª”©—Ç

–ú–∏—Å–∞–ª–¥–∞—Ä:
- –ö–æ–º–ø–∞—Å –∞—Ä –¥–∞–π—ã–º –ñ–µ—Ä–¥–∏–Ω —Ç“Ø–Ω–¥“Ø–∫ —É—é–ª—É–Ω–∞ –∫”©—Ä—Å”©—Ç”©—Ç
- –ú—É–∑–¥–∞—Ç–∫—ã—á –º–∞–≥–Ω–∏—Ç—Ç–µ—Ä–¥–∏ —Ç–∞—Ä—Ç–∞—Ç
- –≠–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç—Ç–µ—Ä –º–æ—Ç–æ—Ä–ª–æ—Ä–¥–æ –∂–∞–Ω–∞ –¥–∏–Ω–∞–º–∏–∫—Ç–µ—Ä–¥–µ

–ñ”©–Ω”©–∫”©–π –æ–∫—à–æ—à—Ç—É–∫:
–ú–∞–≥–Ω–∏—Ç—Ç–µ—Ä –∞–¥–∞–º–¥–∞—Ä —Å—ã—è–∫—Ç—É—É - –∫–∞—Ä–∞–º–∞-–∫–∞—Ä—à—ã–ª–∞—Ä —Ç–∞—Ä—Ç–∞—Ç! üòÑ`;
      }

      // –û–±—â–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è –¥—Ä—É–≥–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞ –∫—ã—Ä–≥—ã–∑—Å–∫–æ–º
      return `ü§î –ö—ã–∑—ã–∫—Ç—É—É —Å—É—Ä–æ–æ! –ö–µ–ª–≥–∏–ª–µ, –º—É–Ω—É —á–æ–≥—É—É —á–µ—á–µ–ª–∏.

–°–∏–∑–¥–∏ —ç–º–Ω–µ –∫—ã–∑—ã–∫—Ç—ã—Ä–∞—Ç?
- –§–∏–∑–∏–∫–∞–ª—ã–∫ –º—ã–π–∑–∞–º–¥–∞—Ä –∂–∞–Ω–∞ —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä?
- –ö–æ–Ω–∫—Ä–µ—Ç—Ç“Ø“Ø –∫”©—Ä“Ø–Ω“Ø—à—Ç”©—Ä?
- –ü—Ä–∞–∫—Ç–∏–∫–∞–ª—ã–∫ –º–∏—Å–∞–ª–¥–∞—Ä?

–ö”©–±“Ø—Ä”©”©–∫ –∫–æ–Ω–∫—Ä–µ—Ç—Ç“Ø“Ø —Å—É—Ä–æ–æ –±–µ—Ä–∏“£–∏–∑, –º–µ–Ω –∞–Ω—ã –º–∏—Å–∞–ª–¥–∞—Ä –º–µ–Ω–µ–Ω —Ç–æ–ª—É–∫ —Ç“Ø—à“Ø–Ω–¥“Ø—Ä“Ø–ø –±–µ—Ä–µ–π–∏–Ω! üí°

–ö–µ“£–µ—à: –§–∏–∑–∏–∫–∞ –±–æ—é–Ω—á–∞ —Ç–∏–ø–∏–∫–∞–ª–¥—É—É —Å—É—Ä–æ–æ–ª–æ—Ä “Ø—á“Ø–Ω —Ç”©–º”©–Ω–¥”©–≥“Ø —Ç–µ–∑ —Å—É—Ä–æ–æ–ª–æ—Ä–¥—É –∫–æ–ª–¥–æ–Ω—É“£—É–∑.`;
    }
    
    // –†—É—Å—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    if (lowerQuestion.includes('–Ω—å—é—Ç–æ–Ω') || lowerQuestion.includes('–∑–∞–∫–æ–Ω') || lowerQuestion.includes('newton') || lowerQuestion.includes('–∑–∞–∫–æ–Ω')) {
      return `üî¨ –ü–µ—Ä–≤—ã–π –∑–∞–∫–æ–Ω –ù—å—é—Ç–æ–Ω–∞ (–ó–∞–∫–æ–Ω –∏–Ω–µ—Ä—Ü–∏–∏):
      
–û–±—ä–µ–∫—Ç –æ—Å—Ç–∞–µ—Ç—Å—è –≤ –ø–æ–∫–æ–µ –∏–ª–∏ –¥–≤–∏–∂–µ—Ç—Å—è —Å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é, –µ—Å–ª–∏ –Ω–∞ –Ω–µ–≥–æ –Ω–µ –¥–µ–π—Å—Ç–≤—É—é—Ç –≤–Ω–µ—à–Ω–∏–µ —Å–∏–ª—ã.

–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä: 
- –ö–Ω–∏–≥–∞ –ª–µ–∂–∏—Ç –Ω–∞ —Å—Ç–æ–ª–µ –∏ –Ω–µ –¥–≤–∏–≥–∞–µ—Ç—Å—è, –ø–æ–∫–∞ –≤—ã –µ—ë –Ω–µ —Ç–æ–ª–∫–Ω–µ—Ç–µ
- –ê–≤—Ç–æ–º–æ–±–∏–ª—å –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∫–∞—Ç–∏—Ç—å—Å—è –ø–æ –∏–Ω–µ—Ä—Ü–∏–∏, –∫–æ–≥–¥–∞ –≤—ã –æ—Ç–ø—É—Å–∫–∞–µ—Ç–µ –≥–∞–∑

–§–æ—Ä–º—É–ª–∞: F = 0 ‚Üí v = const

–≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –µ—Å–ª–∏ —Å—É–º–º–∞ –≤—Å–µ—Ö —Å–∏–ª —Ä–∞–≤–Ω–∞ –Ω—É–ª—é, —Ç–æ —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–∞! üöó`;
    }
    
    if (lowerQuestion.includes('–≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—è') || lowerQuestion.includes('—Ç—è–∂–µ—Å—Ç—å') || lowerQuestion.includes('gravity') || lowerQuestion.includes('–∞—É—É—Ä–ª—É–∫')) {
      return `üåç –ì—Ä–∞–≤–∏—Ç–∞—Ü–∏—è - —ç—Ç–æ —Å–∏–ª–∞ –ø—Ä–∏—Ç—è–∂–µ–Ω–∏—è –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏

–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:
- –ß–µ–º –±–æ–ª—å—à–µ –º–∞—Å—Å–∞ –æ–±—ä–µ–∫—Ç–∞, —Ç–µ–º —Å–∏–ª—å–Ω–µ–µ –µ–≥–æ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—è
- –ß–µ–º –¥–∞–ª—å—à–µ –æ–±—ä–µ–∫—Ç—ã –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞, —Ç–µ–º —Å–ª–∞–±–µ–µ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—è

–ó–∞–∫–æ–Ω –≤—Å–µ–º–∏—Ä–Ω–æ–≥–æ —Ç—è–≥–æ—Ç–µ–Ω–∏—è –ù—å—é—Ç–æ–Ω–∞:
F = G √ó (m‚ÇÅ √ó m‚ÇÇ) / r¬≤

–ì–¥–µ:
- F - —Å–∏–ª–∞ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–∏
- G - –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è
- m‚ÇÅ, m‚ÇÇ - –º–∞—Å—Å—ã –æ–±—ä–µ–∫—Ç–æ–≤
- r - —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ü–µ–Ω—Ç—Ä–∞–º–∏ –æ–±—ä–µ–∫—Ç–æ–≤

–ü—Ä–∏–º–µ—Ä: –ó–µ–º–ª—è –ø—Ä–∏—Ç—è–≥–∏–≤–∞–µ—Ç –≤–∞—Å, –ø–æ—Ç–æ–º—É —á—Ç–æ —É –Ω–µ—ë –æ–≥—Ä–æ–º–Ω–∞—è –º–∞—Å—Å–∞! üåé`;
    }
    
    if (lowerQuestion.includes('—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ') || lowerQuestion.includes('—Ç–æ–∫') || lowerQuestion.includes('electricity') || lowerQuestion.includes('—ç–ª–µ–∫—Ç—Ä')) {
      return `‚ö° –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ - —ç—Ç–æ –¥–≤–∏–∂–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –∑–∞—Ä—è–¥–æ–≤

–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏:
- –≠–ª–µ–∫—Ç—Ä–æ–Ω—ã - –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ –∑–∞—Ä—è–∂–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã
- –ü—Ä–æ—Ç–æ–Ω—ã - –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –∑–∞—Ä—è–∂–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã
- –¢–æ–∫ - –ø–æ—Ç–æ–∫ —ç–ª–µ–∫—Ç—Ä–æ–Ω–æ–≤ –ø–æ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫—É

–ó–∞–∫–æ–Ω –û–º–∞:
U = I √ó R

–ì–¥–µ:
- U - –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ (–í–æ–ª—å—Ç—ã)
- I - —Ç–æ–∫ (–ê–º–ø–µ—Ä—ã) 
- R - —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ (–û–º—ã)

–ü—Ä–æ—Å—Ç–∞—è –∞–Ω–∞–ª–æ–≥–∏—è: 
–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ –≤–æ–¥–æ–ø—Ä–æ–≤–æ–¥–Ω—É—é —Ç—Ä—É–±—É:
- –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ = –¥–∞–≤–ª–µ–Ω–∏–µ –≤–æ–¥—ã
- –¢–æ–∫ = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–¥—ã
- –°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ = —Ç–æ–ª—â–∏–Ω–∞ —Ç—Ä—É–±—ã

–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ —Ç–µ—á–µ—Ç –æ—Ç + –∫ - –∫–∞–∫ –≤–æ–¥–∞ –ø–æ–¥ –≥–æ—Ä—É! üíß`;
    }
    
    if (lowerQuestion.includes('–∫–≤–∞–Ω—Ç–æ–≤–∞—è') || lowerQuestion.includes('–∫–≤–∞–Ω—Ç') || lowerQuestion.includes('quantum') || lowerQuestion.includes('–∫–≤–∞–Ω—Ç—Ç—ã–∫')) {
      return `üî¨ –ö–≤–∞–Ω—Ç–æ–≤–∞—è —Ñ–∏–∑–∏–∫–∞ - —Ñ–∏–∑–∏–∫–∞ –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤

–ö–ª—é—á–µ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:
- –ö–≤–∞–Ω—Ç–æ–≤–∞–Ω–∏–µ - —ç–Ω–µ—Ä–≥–∏—è –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
- –í–æ–ª–Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è - —á–∞—Å—Ç–∏—Ü—ã –≤–µ–¥—É—Ç —Å–µ–±—è –∫–∞–∫ –≤–æ–ª–Ω—ã
- –ü—Ä–∏–Ω—Ü–∏–ø –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç–∏ - –Ω–µ–ª—å–∑—è —Ç–æ—á–Ω–æ –∏–∑–º–µ—Ä–∏—Ç—å –∏ –ø–æ–ª–æ–∂–µ–Ω–∏–µ, –∏ —Å–∫–æ—Ä–æ—Å—Ç—å

–ü—Ä–∏–º–µ—Ä—ã –∫–≤–∞–Ω—Ç–æ–≤–∞–Ω–∏—è:
- –≠–ª–µ–∫—Ç—Ä–æ–Ω—ã –≤ –∞—Ç–æ–º–µ –º–æ–≥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –æ—Ä–±–∏—Ç–∞—Ö
- –°–≤–µ—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–∞—Å—Ç–∏—Ü-—Ñ–æ—Ç–æ–Ω–æ–≤ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π

–ü—Ä–æ—Å—Ç–∞—è –∞–Ω–∞–ª–æ–≥–∏—è:
–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ –ª–µ—Å—Ç–Ω–∏—Ü—É - –≤—ã –º–æ–∂–µ—Ç–µ —Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Å—Ç—É–ø–µ–Ω—å–∫–∞—Ö, –∞ –Ω–µ –º–µ–∂–¥—É –Ω–∏–º–∏! ü™ú

–≠—Ç–æ –∫–∞–∫ –µ—Å–ª–∏ –±—ã —ç–Ω–µ—Ä–≥–∏—è "–ø—Ä—ã–≥–∞–ª–∞" –æ—Ç –æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∫ –¥—Ä—É–≥–æ–º—É!`;
    }
    
    if (lowerQuestion.includes('—ç–Ω–µ—Ä–≥–∏—è') || lowerQuestion.includes('energy') || lowerQuestion.includes('—ç–Ω–µ—Ä–≥–∏—è')) {
      return `‚ö° –≠–Ω–µ—Ä–≥–∏—è - —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å–æ–≤–µ—Ä—à–∞—Ç—å —Ä–∞–±–æ—Ç—É

–û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥—ã —ç–Ω–µ—Ä–≥–∏–∏:
- –ö–∏–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è - —ç–Ω–µ—Ä–≥–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
- –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è - —ç–Ω–µ—Ä–≥–∏—è –ø–æ–ª–æ–∂–µ–Ω–∏—è
- –¢–µ–ø–ª–æ–≤–∞—è - —ç–Ω–µ—Ä–≥–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –º–æ–ª–µ–∫—É–ª
- –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è - —ç–Ω–µ—Ä–≥–∏—è —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –∑–∞—Ä—è–¥–æ–≤

–ó–∞–∫–æ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏:
–≠–Ω–µ—Ä–≥–∏—è –Ω–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∏ –Ω–µ –∏—Å—á–µ–∑–∞–µ—Ç, –∞ —Ç–æ–ª—å–∫–æ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–∑ –æ–¥–Ω–æ–≥–æ –≤–∏–¥–∞ –≤ –¥—Ä—É–≥–æ–π!

–ü—Ä–∏–º–µ—Ä—ã:
- –ö–∞—á–µ–ª–∏: –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è ‚Üí –∫–∏–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è ‚Üí –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è
- –õ–∞–º–ø–æ—á–∫–∞: —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è ‚Üí —Å–≤–µ—Ç–æ–≤–∞—è + —Ç–µ–ø–ª–æ–≤–∞—è
- –ë–∞—Ç–∞—Ä–µ—è: —Ö–∏–º–∏—á–µ—Å–∫–∞—è ‚Üí —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è

–§–æ—Ä–º—É–ª–∞ –∫–∏–Ω–µ—Ç–∏—á–µ—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏:
E = ¬Ω √ó m √ó v¬≤

–ì–¥–µ m - –º–∞—Å—Å–∞, v - —Å–∫–æ—Ä–æ—Å—Ç—å! üöÄ`;
    }
    
    if (lowerQuestion.includes('–º–∞–≥–Ω–µ—Ç–∏–∑–º') || lowerQuestion.includes('–º–∞–≥–Ω–∏—Ç') || lowerQuestion.includes('magnetism') || lowerQuestion.includes('–º–∞–≥–Ω–µ—Ç–∏–∑–º')) {
      return `üß≤ –ú–∞–≥–Ω–µ—Ç–∏–∑–º - —Å–≤–æ–π—Å—Ç–≤–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø—Ä–∏—Ç—è–≥–∏–≤–∞—Ç—å –∏–ª–∏ –æ—Ç—Ç–∞–ª–∫–∏–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã

–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:
- –ú–∞–≥–Ω–∏—Ç–Ω—ã–µ –ø–æ–ª—é—Å–∞ - —Å–µ–≤–µ—Ä–Ω—ã–π (N) –∏ —é–∂–Ω—ã–π (S)
- –ü—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–µ –ø–æ–ª—é—Å–∞ –ø—Ä–∏—Ç—è–≥–∏–≤–∞—é—Ç—Å—è
- –û–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø–æ–ª—é—Å–∞ –æ—Ç—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è

–ú–∞–≥–Ω–∏—Ç–Ω–æ–µ –ø–æ–ª–µ:
- –ù–µ–≤–∏–¥–∏–º–∞—è –æ–±–ª–∞—Å—Ç—å –≤–æ–∫—Ä—É–≥ –º–∞–≥–Ω–∏—Ç–∞
- –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–Ω–∏—Ç–Ω—ã—Ö —Å–∏–ª
- –í–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –∂–µ–ª–µ–∑–Ω—ã–º–∏ –æ–ø–∏–ª–∫–∞–º–∏

–ü—Ä–∏–º–µ—Ä—ã:
- –ö–æ–º–ø–∞—Å –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å–µ–≤–µ—Ä–Ω—ã–π –ø–æ–ª—é—Å –ó–µ–º–ª–∏
- –•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –ø—Ä–∏—Ç—è–≥–∏–≤–∞–µ—Ç –º–∞–≥–Ω–∏—Ç—ã
- –≠–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç—ã –≤ –º–æ—Ç–æ—Ä–∞—Ö –∏ –¥–∏–Ω–∞–º–∏–∫–∞—Ö

–ü—Ä–æ—Å—Ç–∞—è –∞–Ω–∞–ª–æ–≥–∏—è:
–ú–∞–≥–Ω–∏—Ç—ã –∫–∞–∫ –ª—é–¥–∏ - –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏—Ç—è–≥–∏–≤–∞—é—Ç—Å—è! üòÑ`;
    }

    // –û–±—â–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è –¥—Ä—É–≥–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    return `ü§î –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º —ç—Ç–æ –≤–º–µ—Å—Ç–µ.

–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?
- –§–∏–∑–∏—á–µ—Å–∫–∏–µ –∑–∞–∫–æ–Ω—ã –∏ —Ñ–æ—Ä–º—É–ª—ã?
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è?
- –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã?

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –∏ —è –¥–∞–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏! üí°

–°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—ã—Å—Ç—Ä—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –Ω–∏–∂–µ –¥–ª—è —Ç–∏–ø–∏—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Ñ–∏–∑–∏–∫–µ.`;
  };

  const handleQuickPrompt = (prompt: string) => {
    setInputValue(prompt);
  };

  const togglePanel = () => {
    setIsOpen(!isOpen);
  };

  const toggleCollapse = () => {
    setIsCollapsed(!isCollapsed);
  };

  const handleModeChange = (mode: 'chat' | 'physics' | 'example' | 'formula') => {
    setSelectedMode(mode);
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ä–µ–∂–∏–º–∞
    const welcomeMessage: Message = {
      id: Date.now().toString(),
      type: 'ai',
      content: getWelcomeMessage(),
      timestamp: new Date(),
      displayContent: getWelcomeMessage(),
      isTyping: false
    };
    setMessages([welcomeMessage]);
  };

  if (!isOpen) {
    return (
      <div className="fixed right-4 bottom-4 z-50">
        <Button
          onClick={togglePanel}
          className="group relative bg-gradient-to-r from-purple-600 via-blue-600 to-cyan-500 hover:from-purple-700 hover:via-blue-700 hover:to-cyan-600 text-white rounded-full w-16 h-16 shadow-2xl hover:scale-110 transition-all duration-500 overflow-hidden"
        >
          {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
          <div className="absolute inset-0 bg-gradient-to-r from-purple-600 via-blue-600 to-cyan-500 opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
          
          {/* –ü—É–ª—å—Å–∏—Ä—É—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç */}
          <div className="absolute inset-0 rounded-full bg-gradient-to-r from-purple-400 to-blue-400 animate-pulse opacity-20" />
          
          {/* –ò–∫–æ–Ω–∫–∞ */}
          <Bot className="h-7 w-7 relative z-10 group-hover:scale-110 transition-transform duration-300" />
          
          {/* –°–≤–µ—Ç—è—â–∏–π—Å—è —ç—Ñ—Ñ–µ–∫—Ç */}
          <div className="absolute inset-0 rounded-full bg-gradient-to-r from-purple-400 to-blue-400 blur-xl opacity-30 group-hover:opacity-50 transition-opacity duration-500" />
        </Button>
      </div>
    );
  }

  return (
    <div className={`fixed right-0 top-0 h-full z-50 transition-all duration-700 ease-out ${
      isCollapsed ? 'w-20' : 'w-[420px]'
    }`}>
      <div className="h-full bg-gradient-to-b from-gray-50 via-white to-gray-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 border-l border-gray-200/50 dark:border-gray-700/50 shadow-2xl backdrop-blur-xl flex flex-col">
        {/* Header */}
        <div className="relative p-6 border-b border-gray-200/50 dark:border-gray-700/50 bg-gradient-to-r from-purple-600 via-blue-600 to-cyan-500 text-white overflow-hidden">
          {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
          <div className="absolute inset-0 bg-gradient-to-r from-purple-600/90 via-blue-600/90 to-cyan-500/90" />
          <div className="absolute inset-0 bg-gradient-to-br from-white/10 to-transparent" />
          
          {/* –ü–ª–∞–≤–∞—é—â–∏–µ —á–∞—Å—Ç–∏—Ü—ã */}
          <div className="absolute inset-0 overflow-hidden">
            <div className="absolute top-4 left-8 w-2 h-2 bg-white/30 rounded-full animate-bounce" style={{ animationDelay: '0s' }} />
            <div className="absolute top-8 right-12 w-1 h-1 bg-white/40 rounded-full animate-bounce" style={{ animationDelay: '0.5s' }} />
            <div className="absolute bottom-6 left-16 w-1.5 h-1.5 bg-white/25 rounded-full animate-bounce" style={{ animationDelay: '1s' }} />
          </div>
          
          <div className="relative z-10 flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="relative">
                <Bot className="h-6 w-6" />
                <div className="absolute -top-1 -right-1 w-3 h-3 bg-green-400 rounded-full animate-pulse" />
              </div>
              {!isCollapsed && (
                <div>
                  <span className="font-bold text-lg">{t('ai.title')}</span>
                  <div className="text-xs text-white/80 mt-1">Powered by AI</div>
                </div>
              )}
            </div>
            <div className="flex items-center space-x-2">
              <Button
                variant="ghost"
                size="sm"
                onClick={toggleCollapse}
                className="text-white hover:bg-white/20 p-2 rounded-full transition-all duration-300 hover:scale-110"
              >
                {isCollapsed ? <ChevronLeft className="h-4 w-4" /> : <ChevronRight className="h-4 w-4" />}
              </Button>
              <Button
                variant="ghost"
                size="sm"
                onClick={togglePanel}
                className="text-white hover:bg-white/20 p-2 rounded-full transition-all duration-300 hover:scale-110"
              >
                <X className="h-4 w-4" />
              </Button>
            </div>
          </div>
        </div>

        {!isCollapsed && (
          <>
            {/* Quick Prompts */}
            <div className="p-6 border-b border-gray-200/50 dark:border-gray-700/50 bg-gradient-to-r from-purple-50/50 to-blue-50/50 dark:from-purple-900/20 dark:to-blue-900/20">
              <div className="flex items-center space-x-2 mb-4">
                <div className="p-2 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-lg">
                  <Lightbulb className="h-4 w-4 text-white" />
                </div>
                <span className="text-sm font-semibold text-gray-700 dark:text-gray-300">
                  {t('ai.quick.prompts')}
                </span>
              </div>
              <div className="grid grid-cols-2 gap-2">
                {quickPrompts.map((prompt, index) => (
                  <Button
                    key={index}
                    variant="outline"
                    size="sm"
                    onClick={() => handleQuickPrompt(prompt)}
                    className="text-xs h-10 px-3 hover:bg-gradient-to-r hover:from-purple-50 hover:to-blue-50 dark:hover:from-purple-900/30 dark:hover:to-blue-900/30 hover:border-purple-300 dark:hover:border-purple-600 transition-all duration-300 hover:scale-105 text-left justify-start"
                  >
                    {prompt}
                  </Button>
                ))}
              </div>
            </div>

            {/* Mode Selection */}
            <div className="p-4 border-b border-gray-200/50 dark:border-gray-700/50 bg-gradient-to-r from-blue-50/50 to-purple-50/50 dark:from-blue-900/20 dark:to-purple-900/20">
              <div className="flex items-center space-x-2 mb-3">
                <div className="p-2 bg-gradient-to-r from-green-400 to-blue-500 rounded-lg">
                  <Cpu className="h-4 w-4 text-white" />
                </div>
                <span className="text-sm font-semibold text-gray-700 dark:text-gray-300">
                  –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
                </span>
              </div>
              <div className="grid grid-cols-2 gap-2">
                <Button
                  variant={selectedMode === 'chat' ? 'default' : 'outline'}
                  size="sm"
                  onClick={() => handleModeChange('chat')}
                  className={`text-xs h-9 px-3 transition-all duration-300 hover:scale-105 ${
                    selectedMode === 'chat' 
                      ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg' 
                      : 'hover:bg-gradient-to-r hover:from-blue-50 hover:to-purple-50 dark:hover:from-blue-900/30 dark:hover:to-purple-900/30'
                  }`}
                >
                  <MessageCircle className="h-3 w-3 mr-1" />
                  –ß–∞—Ç
                </Button>
                <Button
                  variant={selectedMode === 'physics' ? 'default' : 'outline'}
                  size="sm"
                  onClick={() => handleModeChange('physics')}
                  className={`text-xs h-9 px-3 transition-all duration-300 hover:scale-105 ${
                    selectedMode === 'physics' 
                      ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg' 
                      : 'hover:bg-gradient-to-r hover:from-blue-50 hover:to-purple-50 dark:hover:from-blue-900/30 dark:hover:to-purple-900/30'
                  }`}
                >
                  <Atom className="h-3 w-3 mr-1" />
                  –§–∏–∑–∏–∫–∞
                </Button>
                <Button
                  variant={selectedMode === 'example' ? 'default' : 'outline'}
                  size="sm"
                  onClick={() => handleModeChange('example')}
                  className={`text-xs h-9 px-3 transition-all duration-300 hover:scale-105 ${
                    selectedMode === 'example' 
                      ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg' 
                      : 'hover:bg-gradient-to-r hover:from-blue-50 hover:to-purple-50 dark:hover:from-blue-900/30 dark:hover:to-purple-900/30'
                  }`}
                >
                  <BookOpen className="h-3 w-3 mr-1" />
                  –ü—Ä–∏–º–µ—Ä—ã
                </Button>
                <Button
                  variant={selectedMode === 'formula' ? 'default' : 'outline'}
                  size="sm"
                  onClick={() => handleModeChange('formula')}
                  className={`text-xs h-9 px-3 transition-all duration-300 hover:scale-105 ${
                    selectedMode === 'formula' 
                      ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg' 
                      : 'hover:bg-gradient-to-r hover:from-blue-50 hover:to-purple-50 dark:hover:from-blue-900/30 dark:hover:to-purple-900/30'
                  }`}
                >
                  <Waves className="h-3 w-3 mr-1" />
                  –§–æ—Ä–º—É–ª—ã
                </Button>
              </div>
            </div>

            {/* Messages */}
            <div className="flex-1 overflow-y-auto p-6 space-y-6 bg-gradient-to-b from-gray-50/50 to-white/50 dark:from-gray-900/50 dark:to-gray-800/50">
              {messages.map((message) => (
                <div
                  key={message.id}
                  className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}
                >
                  <div
                    className={`max-w-[85%] rounded-2xl p-4 shadow-lg transition-all duration-500 hover:scale-105 ${
                      message.type === 'user'
                        ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-blue-500/25'
                        : 'bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 shadow-gray-500/25 border border-gray-200/50 dark:border-gray-700/50'
                    }`}
                  >
                    {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫—É—Ä—Å–æ—Ä –¥–ª—è –ò–ò —Å–æ–æ–±—â–µ–Ω–∏–π */}
                    {message.type === 'ai' && message.isTyping && (
                      <div className="inline-block w-2 h-5 bg-gradient-to-b from-purple-500 to-blue-500 rounded-full animate-pulse ml-1" />
                    )}
                    
                    <div className="whitespace-pre-wrap text-sm leading-relaxed">
                      {message.type === 'ai' && message.isTyping 
                        ? (message.displayContent || '') 
                        : message.content
                      }
                    </div>
                    
                    <div className={`text-xs mt-3 flex items-center space-x-2 ${
                      message.type === 'user' ? 'text-blue-100' : 'text-gray-500'
                    }`}>
                      <span>{message.timestamp.toLocaleTimeString()}</span>
                      {message.type === 'ai' && (
                        <div className="flex items-center space-x-1">
                          <Cpu className="h-3 w-3" />
                          <span>AI</span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
              
              {isLoading && (
                <div className="flex justify-start">
                  <div className="bg-gradient-to-r from-purple-100 to-blue-100 dark:from-purple-900/30 dark:to-blue-900/30 rounded-2xl p-4 border border-purple-200/50 dark:border-purple-700/50">
                    <div className="flex items-center space-x-3">
                      <div className="relative">
                        <div className="w-6 h-6 border-2 border-purple-500 border-t-transparent rounded-full animate-spin" />
                        <div className="absolute inset-0 w-6 h-6 border-2 border-blue-500 border-t-transparent rounded-full animate-spin" style={{ animationDirection: 'reverse', animationDuration: '1.5s' }} />
                      </div>
                      <div className="flex space-x-1">
                        <div className="w-2 h-2 bg-purple-500 rounded-full animate-bounce" style={{ animationDelay: '0s' }} />
                        <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }} />
                        <div className="w-2 h-2 bg-cyan-500 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }} />
                      </div>
                      <span className="text-sm text-gray-600 dark:text-gray-400 font-medium">
                        {t('ai.thinking')}
                      </span>
                    </div>
                  </div>
                </div>
              )}
              <div ref={messagesEndRef} />
            </div>

            {/* Input */}
            <div className="p-6 border-t border-gray-200/50 dark:border-gray-700/50 bg-gradient-to-r from-purple-50/30 to-blue-50/30 dark:from-purple-900/20 dark:to-blue-900/20">
              <div className="flex space-x-3">
                <div className="relative flex-1">
                  <Input
                    value={inputValue}
                    onChange={(e) => setInputValue(e.target.value)}
                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                    placeholder={t('ai.input.placeholder')}
                    className="w-full pl-4 pr-12 py-3 bg-white dark:bg-gray-800 border-2 border-gray-200 dark:border-gray-700 focus:border-purple-500 dark:focus:border-purple-400 rounded-xl transition-all duration-300 focus:ring-4 focus:ring-purple-500/20 dark:focus:ring-purple-400/20"
                  />
                  <div className="absolute right-3 top-1/2 transform -translate-y-1/2">
                    <Waves className="h-4 w-4 text-gray-400" />
                  </div>
                </div>
                <Button
                  onClick={handleSendMessage}
                  disabled={!inputValue.trim() || isLoading}
                  className="bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white px-6 py-3 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  <Send className="h-4 w-4" />
                </Button>
              </div>
            </div>
          </>
        )}

        {/* Collapsed View */}
        {isCollapsed && (
          <div className="flex-1 flex flex-col items-center justify-center space-y-6 p-4">
            <div className="text-center">
              <div className="relative mb-4">
                <Bot className="h-10 w-10 text-purple-600 mx-auto" />
                <div className="absolute -top-1 -right-1 w-4 h-4 bg-green-400 rounded-full animate-pulse" />
              </div>
              <div className="text-xs text-gray-500 dark:text-gray-400 text-center font-medium">
                {t('ai.title')}
              </div>
            </div>
            
            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã */}
            <div className="space-y-2">
              <div className="w-1 h-1 bg-purple-400 rounded-full animate-pulse" />
              <div className="w-1 h-1 bg-blue-400 rounded-full animate-pulse" style={{ animationDelay: '0.3s' }} />
              <div className="w-1 h-1 bg-cyan-400 rounded-full animate-pulse" style={{ animationDelay: '0.6s' }} />
            </div>
            
            <Button
              variant="ghost"
              size="sm"
              onClick={toggleCollapse}
              className="text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 hover:bg-purple-100 dark:hover:bg-purple-900/30 rounded-full p-2 transition-all duration-300 hover:scale-110"
            >
              <ChevronRight className="h-4 w-4" />
            </Button>
          </div>
        )}
      </div>
    </div>
  );
};

export default AIAssistant;
